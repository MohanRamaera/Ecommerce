generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Image {
  id        String   @id @default(cuid())
  productId String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime
  Product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id        String      @id @default(cuid())
  isPaid    Boolean     @default(false)
  phone     String      @default("")
  address   String      @default("")
  createdAt DateTime    @default(now())
  OrderItem OrderItem[]
  User      User?       @relation(fields: [userId], references: [id])
  userId    String?
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  Order     Order   @relation(fields: [orderId], references: [id])
  Product   Product @relation(fields: [productId], references: [id])
}

model Product {
  id         String      @id @default(cuid())
  name       String
  price      Decimal
  isFeatured Boolean     @default(false)
  isArchived Boolean     @default(false)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now())
  Image      Image[]
  OrderItem  OrderItem[]
  categoryId String // Foreign Key to Category
  category   Category    @relation("CategoryToProduct", fields: [categoryId], references: [id])
}

model User {
  id       String  @id @default(cuid())
  name     String
  email    String
  role     ROLE    @default(USER)
  password String
  Order    Order[]
}

model Category {
  id String @id @default(uuid())

  billboardId String // Foreign Key to Billboard
  billboard   Billboard @relation(fields: [billboardId], references: [id])
  name        String
  products    Product[] @relation("CategoryToProduct")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([billboardId])
}

model Billboard {
  id         String     @id @default(uuid())
  label      String
  imageUrl   String
  categories Category[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

enum ROLE {
  USER
  ADMMIN
}
